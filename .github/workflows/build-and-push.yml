name: build-and-push

on:
  workflow_dispatch:
    inputs:
      dockerImageName:
        description: 'Docker Image Name'
        required: true
      dockerImageTag:
        description: 'Docker Image Tag'
        required: true

jobs:
  build-and-push-to-registries:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Prepare
        id: prepare
        run: |
          DOCKERHUB_IMAGE_REPO=futuretea
          GHCR_IMAGE_REPO=ghcr.io/${{ github.repository }}
          DOCKER_IMAGE_NAME=${{ github.event.inputs.dockerImageName }}
          DOCKERHUB_IMAGE=${DOCKERHUB_IMAGE_REPO}/${DOCKER_IMAGE_NAME}
          GHCR_IMAGE=${GHCR_IMAGE_REPO}/${DOCKER_IMAGE_NAME}
          DOCKER_PLATFORMS=linux/amd64,linux/arm64
          TAG_NAME=${{ github.event.inputs.dockerImageTag }}
          DOCKERHUB_IMAGE_TAGS="--tag ${DOCKERHUB_IMAGE}:${TAG_NAME} --tag ${DOCKERHUB_IMAGE}:latest"
          GHCR_IMAGE_TAGS="--tag ${GHCR_IMAGE}:${TAG_NAME} --tag ${GHCR_IMAGE}:latest"
          ALL_IMAGE_TAGS="${GHCR_IMAGE_TAGS} ${DOCKERHUB_IMAGE_TAGS}"
          echo ::set-output name=dockerhub_image::${DOCKERHUB_IMAGE}
          echo ::set-output name=ghcr_image::${GHCR_IMAGE}
          echo ::set-output name=version::${TAG_NAME}
          echo ::set-output name=buildx_args::--platform ${DOCKER_PLATFORMS} \\
            --build-arg VERSION=${TAG_NAME} \\
            --build-arg BUILD_DATE=$(date -u +'%Y-%m-%dT%H:%M:%SZ') \\
            --build-arg --no-cache \\
            --build-arg VCS_REF=${GITHUB_SHA::8} \\
            ${ALL_IMAGE_TAGS} ${DOCKER_IMAGE_NAME}
      - name: Set up Docker Buildx
        uses: crazy-max/ghaction-docker-buildx@v3
      - name: Login to GHCR
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
      - name: Docker Buildx (build and push)
        run: |
          docker buildx build --output "type=image,push=true" ${{ steps.prepare.outputs.buildx_args }}